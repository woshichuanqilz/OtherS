#
# This file is a command-module for Dragonfly.
# (c) Copyright 2008 by Christo Butcher
# Licensed under the LGPL, see <http://www.gnu.org/licenses/>

"""
Command-module for Vim

"""
#---------------------------------------------------------------------------

from dragonfly import (Grammar, AppContext, Dictation, Mouse, Key, Repeat, Text, Choice)

from caster.lib import control
from caster.lib import settings
from caster.lib.dfplus.additions import IntegerRefST
from caster.lib.dfplus.merge import gfilter
from caster.lib.dfplus.merge.mergerule import MergeRule
from caster.lib.dfplus.state.short import R

# def FindLetter(webname):
    # BringApp(r"C:/Users/Administrator/AppData/Local/Google/Chrome/Application/chrome.exe", WebDict[webname]).execute()
    # Key("f").execute()
# alphabet = ["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]

class VIMRule(MergeRule):
    pronunciation = "vim"
    alphabet = ["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]

    mapping = {
#movement
            "(up [<n>]|[<n>] up)":                    R(Key("k"), rdescript="Atom: Move Cursor Up #") * Repeat(extra="n"),
            "left [<n>]|[<n>] left":                  R(Key("h"), rdescript="close tab") * Repeat(extra="n"),
            "right [<n>]|[<n>] right":                R(Key("l"), rdescript="close tab") * Repeat(extra="n"),
            "down [<n>]|[<n>] down":                  R(Key("j"), rdescript="Atom: Move Cursor Up #") * Repeat(extra="n"),
            "[go to] (line begin|begin line)":   R(Key("escape,g,h"), rdescript="go forward"),
            "[go to] (line begin|begin end)":   R(Key("escape,g,l"), rdescript="go forward"),
            "[go to] file begin":          R(Key("escape,g,g"), rdescript="go forward"),
            "[go to] file end":            R(Key("escape,G"), rdescript="go forward"),
            "go back":                     R(Key("a-a"), rdescript="go back"),
            "go forward":                  R(Key("a-d"), rdescript="go forward"),
            "go forward":                  R(Key("a-d"), rdescript="go forward"),
            "page up [<n>]":               R(Key("c-u"), rdescript="page up"),
            "page down [<n>]":             R(Key("c-d"), rdescript="page down"),

            "append":                      R(Key("escape, A"), rdescript="close tab"),
            "comment":                     R(Key("comma,c,c"), rdescript="comment"),
            "close":                       R(Text(":x\n"), rdescript="close tab"),
            "close other tab":             R(Text(":tabo\n"), rdescript="close other tab"),
            "close other window":          R(Text(":on"), rdescript="close other window"),
            "(tab close)|(close tab)":     R(Text(":tabclose\n"), rdescript="Run the file"),
#edit
            "delete [<n>] line":           R(Key("d,d"), rdescript="vim: delete line") * Repeat(extra="n"),
            "(delete|select) content":     R(Key("escape") + Text("ctt"), rdescript="vim: delete line") * Repeat(extra="n"),
            "repeat [<n>]":                R(Key("dot"), rdescript="Atom: Move Cursor Up #") * Repeat(extra="n"),
            "change case":                 R(Key(""), rdescript="Atom: Move Cursor Up #") * Repeat(extra="n"),

#file 
            "file list":                   R(Text(":NERDTree\n"), rdescript="file list"),
            "recent file":                 R(Text(":MRU\n"), rdescript="file list"),

#search and Substitute
            "search [<text>]":             R(Key("slash") + Text("%(text)s\n"), rdescript="find text"),
            # "find <letter>":               R(Key("escape,f") + Text("%(letter)s\n"), rdescrpit="find text"),
            # "find <letter>":               R(Function(FindLetter), rdescript="Spell"),
            # "find backward <alpha-zulu>":  R(Key("escape,F") + Text("%(text)s\n"), rdescript="find text"),
            # "[(go|jump) to] tab <n>":      R(Key("escape,%(n)d,g,t"), rdescript="go tab"),
            "[(go|jump) to] line <n>":     R(Key("escape") + Text("%(n)s") + Key("G"), rdescript="go to line"),
            "[(go|jump) to] line <n>":     R(Key("escape") + Text("%(n)s") + Key("g/20,t"), rdescript="go to line"),
#Mode Change
            "insert down":                 R(Key("o"), rdescript="vim: Preview In Browser"),
            "insert up":                   R(Key("O"), rdescript="vim: Preview In Browser"),
            "insert":                      R(Key("i"), rdescript="vim: Preview In Browser"),
            "forward  [<n>] [word]":       R(Text("w"), rdescript="next tab") * Repeat(extra="n"),
            "backward [<n>] [word]":       R(Text("b"), rdescript="next tab") * Repeat(extra="n"),
            "new tab":                     R(Text(":tabnew\n"), rdescript="new tab") * Repeat(extra="n"),
            "(normal|escape)":             R(Key("escape"), rdescript="Enter normal mode"),
            "(previous|left) tab [<n>]":   R(Text(":tabprev\n"), rdescript="previous tab") * Repeat(extra="n"),
            "(next|right) tab [<n>]":      R(Text(":tabnext\n"), rdescript="next tab") * Repeat(extra="n"),
            "uppercase first letter":      R(Text(":call UpperCaseFirstLetter()\n"), rdescript="Uppercase First Letter"),
            "(recover|recovery)":          R(Key("escape, u"), rdescript="Uppercase First Letter"),
            "(VIM RC|edit configuration)": R(Text(":call EditVimrc()\n"),   rdescript="start vimrc file"),
            "visual":                      R(Key("v"), rdescript="Atom: Move Cursor Up #"),
            "select current line":         R(Key("V"), rdescript="Atom: Move Cursor Up #"),
            "select [<n>] line":           R(Key("V,%(n)d,j,k"), rdescript="Atom: Move Cursor Up #"),
            "(select|visual) block":       R(Key("v/20,p"), rdescript="Atom: Move Cursor Up #"),
            "delete block":                R(Key("d/20,p"), rdescript="Atom: Move Cursor Up #"),
            "copy [<n>] line":             R(Key("%(n)d,y,y"), rdescript="Erase Multi Clipboard"),
            "copy [<n>] word":             R(Key("y,%(n)d,w"), rdescript="Erase Multi Clipboard"),
            "copy block":                  R(Key("escape,y,p"), rdescript="Atom: Move Cursor Up #"),
            "run (the|this) file":         R(Key("comma,r,r"), rdescript="Run the file"),
            "delete block":                R(Key("escape,d,p"), rdescript="Atom: Move Cursor Up #"),

# Other things 
            "restart editor":              R(Text(":Restart\n"), rdescript="Atom: Move Cursor Up #"),
            # requires function list plug-in:
        }
    extras = [
              Choice("letter", { k:k for k in alphabet }),
              Dictation("text"),
              # Integer("n", 1, 1000),
              IntegerRefST("n", 1, 1000),
              IntegerRefST("n2", 1, 10),
             ]
    defaults = {"n": 1}

#---------------------------------------------------------------------------

context = AppContext(executable="gvim")
grammar = Grammar("vim", context=context)

if settings.SETTINGS["apps"]["vim"]:
    if settings.SETTINGS["miscellaneous"]["rdp_mode"]:
        control.nexus().merger.add_global_rule(VIMRule())
    else:
        rule = VIMRule(name="vim")
        gfilter.run_on(rule)
        grammar.add_rule(rule)
        grammar.load()
